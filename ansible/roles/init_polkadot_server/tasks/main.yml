---
- name: Install required packages
  ansible.builtin.package:
    name:
      - curl
      - lz4
      - tar
      - systemd
    state: present

- name: Ensure /opt/polkadot directory exists
  ansible.builtin.file:
    path: "{{ install_dir }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"

- name: Create Polkadot data directory
  ansible.builtin.file:
    path: "{{ data_dir }}"
    state: directory
    owner: "{{ polkadot_user }}"
    group: "{{ polkadot_user }}"
    mode: "0755"

- name: Create Polkadot log directory
  ansible.builtin.file:
    path: "{{ log_dir }}"
    state: directory
    owner: "{{ polkadot_user }}"
    group: "{{ polkadot_user }}"
    mode: "0755"

- name: Install UFW
  ansible.builtin.package:
    name: ufw
    state: present

- name: Allow port 30334
  ansible.builtin.ufw:
    rule: allow
    port: "{{ p2p_port }}"
    proto: tcp

- name: Allow port 9954
  ansible.builtin.ufw:
    rule: allow
    port: "{{ rpc_port }}"
    proto: tcp

- name: Allow port 9616
  ansible.builtin.ufw:
    rule: allow
    port: "{{ prometheus_port }}"
    proto: tcp

- name: Enable UFW
  ansible.builtin.ufw:
    state: enabled
    policy: allow
    logging: on

- name: Ensure UFW status
  ansible.builtin.command: ufw status
  register: ufw_status

- name: Display UFW status
  debug:
    var: ufw_status.stdout

#- name: Download and extract Polkadot Full Node Rocksdb snapshot  (Optional)
#  ansible.builtin.shell: |
#    curl -o - -L {{ snapshot_url }} | lz4 -c -d - | tar -x -C {{ data_dir }}
#  args:
#    executable: /bin/bash

- name: Create systemd service
  ansible.builtin.template:
    src: polkadot.service.j2
    dest: "/etc/systemd/system/{{ service_name }}.service"
    mode: "0644"

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true